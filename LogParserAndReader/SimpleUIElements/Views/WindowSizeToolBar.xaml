<UserControl x:Class="SimpleUIElements.Views.WindowSizeToolBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SimpleUIElements.Views"
             mc:Ignorable="d" 
             d:DesignHeight="32" d:DesignWidth="250" Loaded="WindowSizeBar_Loaded" 
             Unloaded="WindowSizeBar_UnLoaded" VerticalAlignment="Top">
    <StackPanel Orientation="Horizontal" Grid.Column="2" VerticalAlignment="Top" Background="Transparent">
        <StackPanel.Resources>
            <Style x:Key="CloseButton" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Width" Value="48"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#C00010" />
                                    <Setter Property="BorderBrush" Value="#FF0050"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ChangeWindowSizeButton" TargetType="{x:Type Button}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Width" Value="48"/>
                <Setter Property="Height" Value="32"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#CCCCCC" />
                                    <Setter Property="BorderBrush" Value="#DDDDDD"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </StackPanel.Resources>
        <Button Style="{DynamicResource ChangeWindowSizeButton}"  Click="MinimizeWindow_Click" >
            <Image Height="16" Width="16" >
                <Image.Source>
                    <BitmapImage UriSource="/LogParserAndReader;component/ImageResources/Icons/Minimize-Window-Black-64.png"/>
                </Image.Source>
            </Image>
        </Button>
        <Button Style="{DynamicResource ChangeWindowSizeButton}" 
                Visibility="{Binding MaximizeWindowButtonVisibility}" 
                Click="MaximizeWindow_Click">
            <Image Height="16" Width="16" >
                <Image.Source>
                    <BitmapImage UriSource="/LogParserAndReader;component/ImageResources/Icons/Maximize-Window-Black-64.png"/>
                </Image.Source>
            </Image>
        </Button>
        <Button Style="{DynamicResource ChangeWindowSizeButton}"
                Visibility="{Binding RestoreWindowButtonVisibility}" 
                Click="RestoreWindow_Click" >
            <Image Height="16" Width="16" >
                <Image.Source>
                    <BitmapImage UriSource="/LogParserAndReader;component/ImageResources/Icons/Restore-Window-Black-64.png"/>
                </Image.Source>
            </Image>
        </Button>
        <Button Style="{DynamicResource CloseButton}" Click="CloseWindow_Click" >
            <Image Height="16" Width="16" >
                <Image.Source>
                    <BitmapImage UriSource="/LogParserAndReader;component/ImageResources/Icons/Close-Window-Black-64.png"/>
                </Image.Source>
            </Image>
        </Button>
    </StackPanel>
</UserControl>
